{
  "version": 3,
  "sources": ["../lib/from_iterator.js", "../lib/from_iterator_map.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {Array} output array\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tout.push( v.value );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIterator;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {Array} output array\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tout.push( clbk.call( thisArg, v.value, i ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIteratorMap;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-len, no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar isObject = require( '@stdlib/assert-is-object' );\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar hasIteratorSymbolSupport = require( '@stdlib/assert-has-iterator-symbol-support' );\nvar ITERATOR_SYMBOL = require( '@stdlib/symbol-iterator' );\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar getter = require( '@stdlib/array-base-getter' );\nvar accessorGetter = require( '@stdlib/array-base-accessor-getter' );\nvar inherits = require( '@stdlib/utils-inherit' );\nvar parent = require( '@stdlib/array-fixed-endian-float64' ); // eslint-disable-line stdlib/no-redeclare\nvar format = require( '@stdlib/string-format' );\nvar fromIterator = require( './from_iterator.js' );\nvar fromIteratorMap = require( './from_iterator_map.js' );\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = 8; // 8 bytes per double\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\nvar BYTE_ORDER = 'little-endian';\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a `Float64ArrayLE` constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Float64ArrayLE` constructor\n*/\nfunction isFloat64ArrayLEConstructor( value ) { // eslint-disable-line id-length\n\treturn ( value === Float64ArrayLE );\n}\n\n\n// MAIN //\n\n/**\n* Typed array constructor which returns a typed array representing an array of double-precision floating-point numbers in little-endian byte order.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or an iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {TypeError} if provided only one argument, the argument must be a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @returns {Float64ArrayLE} typed array instance\n*\n* @example\n* var arr = new Float64ArrayLE();\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Float64ArrayLE( 2 );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Float64ArrayLE( [ 1.0, 2.0 ] );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Float64ArrayLE( buf );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Float64ArrayLE( buf, 8 );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Float64ArrayLE( buf, 8, 2 );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction Float64ArrayLE() {\n\tvar nargs = arguments.length;\n\tif ( !(this instanceof Float64ArrayLE) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Float64ArrayLE();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Float64ArrayLE( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Float64ArrayLE( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Float64ArrayLE( arguments[0], arguments[1], arguments[2] );\n\t}\n\tif ( nargs === 0 ) {\n\t\tparent.call( this, BYTE_ORDER );\n\t} else if ( nargs === 1 ) {\n\t\tparent.call( this, BYTE_ORDER, arguments[0] );\n\t} else if ( nargs === 2 ) {\n\t\tparent.call( this, BYTE_ORDER, arguments[0], arguments[1] );\n\t} else if ( nargs === 3 ) {\n\t\tparent.call( this, BYTE_ORDER, arguments[0], arguments[1], arguments[2] );\n\t}\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Float64ArrayLE\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var nbytes = Float64ArrayLE.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Float64ArrayLE, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Float64ArrayLE\n* @readonly\n* @type {string}\n* @default 'Float64ArrayLE'\n*\n* @example\n* var str = Float64ArrayLE.name;\n* // returns 'Float64ArrayLE'\n*/\nsetReadOnly( Float64ArrayLE, 'name', 'Float64ArrayLE' );\n\n/**\n* Creates a new `Float64ArrayLE` from an array-like object or an iterable.\n*\n* @name from\n* @memberof Float64ArrayLE\n* @type {Function}\n* @param {(Collection|Iterable)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a Float64ArrayLE\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @returns {Float64ArrayLE} typed array instance\n*\n* @example\n* var arr = Float64ArrayLE.from( [ 1.0, 2.0 ] );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* function clbk( v ) {\n*     return v * 2.0;\n* }\n*\n* var arr = Float64ArrayLE.from( [ 1.0, 2.0 ], clbk );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( Float64ArrayLE, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar get;\n\tvar len;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isFloat64ArrayLEConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a Float64ArrayLE.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\tlen = src.length;\n\t\t\tif ( src.get && src.set ) {\n\t\t\t\tget = accessorGetter( 'default' );\n\t\t\t} else {\n\t\t\t\tget = getter( 'default' );\n\t\t\t}\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tbuf.setFloat64( i*BYTES_PER_ELEMENT, clbk.call( thisArg, get( src, i ), i ), true );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) {\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tlen = tmp.length;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf.setFloat64( i*BYTES_PER_ELEMENT, tmp[ i ], true );\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n});\n\n/**\n* Creates a new `Float64ArrayLE` from a variable number of arguments.\n*\n* @name of\n* @memberof Float64ArrayLE\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a Float64ArrayLE\n* @returns {Float64ArrayLE} typed array instance\n*\n* @example\n* var arr = Float64ArrayLE.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 4\n*/\nsetReadOnly( Float64ArrayLE, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isFloat64ArrayLEConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a Float64ArrayLE.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n// Inherit from the parent constructor:\ninherits( Float64ArrayLE, parent );\n\n\n// EXPORTS //\n\nmodule.exports = Float64ArrayLE;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of double-precision floating-point numbers in little-endian byte order.\n*\n* @module @stdlib/array-little-endian-float64\n*\n* @example\n* var Float64ArrayLE = require( '@stdlib/array-little-endian-float64' );\n*\n* var arr = new Float64ArrayLE();\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var Float64ArrayLE = require( '@stdlib/array-little-endian-float64' );\n*\n* var arr = new Float64ArrayLE( 2 );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var Float64ArrayLE = require( '@stdlib/array-little-endian-float64' );\n*\n* var arr = new Float64ArrayLE( [ 1.0 ] );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n* var Float64ArrayLE = require( '@stdlib/array-little-endian-float64' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Float64ArrayLE( buf );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n* var Float64ArrayLE = require( '@stdlib/array-little-endian-float64' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Float64ArrayLE( buf, 8 );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n* var Float64ArrayLE = require( '@stdlib/array-little-endian-float64' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Float64ArrayLE( buf, 8, 2 );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 2\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_from_iterator", "__commonJSMin", "exports", "module", "fromIterator", "it", "out", "v", "require_from_iterator_map", "__commonJSMin", "exports", "module", "fromIteratorMap", "it", "clbk", "thisArg", "out", "v", "i", "require_main", "__commonJSMin", "exports", "module", "isCollection", "isObject", "isFunction", "hasIteratorSymbolSupport", "ITERATOR_SYMBOL", "setReadOnly", "getter", "accessorGetter", "inherits", "parent", "format", "fromIterator", "fromIteratorMap", "BYTES_PER_ELEMENT", "HAS_ITERATOR_SYMBOL", "BYTE_ORDER", "isFloat64ArrayLEConstructor", "value", "Float64ArrayLE", "nargs", "src", "thisArg", "clbk", "out", "buf", "tmp", "get", "len", "args", "i", "main"]
}
